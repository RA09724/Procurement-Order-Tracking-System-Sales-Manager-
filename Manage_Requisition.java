/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package procurement_order_tracking_system;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sarvein Rao
 */
public class Manage_Requisition extends javax.swing.JFrame {

    /**
     * Creates new form Manage_Requisition
     */
    public Manage_Requisition() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Mng_Requisition = new javax.swing.JTable();
        btnLoadRequi = new javax.swing.JButton();
        cboStatus = new javax.swing.JComboBox<>();
        btnFilterRequisition = new javax.swing.JButton();
        cboRequiDelete = new javax.swing.JComboBox<>();
        btnDeleteRequisition = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Manage Requisitions");

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(307, 307, 307))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tbl_Mng_Requisition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Requisition ID", "Sales Manager ID", "Item ID", "Item Name", "Supplier", "Reason", "Date Made", "Date Needed", "Status"
            }
        ));
        jScrollPane1.setViewportView(tbl_Mng_Requisition);

        btnLoadRequi.setBackground(new java.awt.Color(102, 102, 255));
        btnLoadRequi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLoadRequi.setForeground(new java.awt.Color(0, 0, 0));
        btnLoadRequi.setText("Load Requisition");
        btnLoadRequi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadRequiActionPerformed(evt);
            }
        });

        cboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accepted", "Pending", "Reject" }));

        btnFilterRequisition.setBackground(new java.awt.Color(102, 102, 255));
        btnFilterRequisition.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFilterRequisition.setForeground(new java.awt.Color(0, 0, 0));
        btnFilterRequisition.setText("Filter");
        btnFilterRequisition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterRequisitionActionPerformed(evt);
            }
        });

        btnDeleteRequisition.setBackground(new java.awt.Color(102, 102, 255));
        btnDeleteRequisition.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDeleteRequisition.setForeground(new java.awt.Color(0, 0, 0));
        btnDeleteRequisition.setText("Delete");
        btnDeleteRequisition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRequisitionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoadRequi)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cboRequiDelete, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFilterRequisition)
                            .addComponent(btnDeleteRequisition))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnLoadRequi)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFilterRequisition))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboRequiDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteRequisition))))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadRequiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadRequiActionPerformed
        // Define the table model for tbl_Mng_Requisition
        DefaultTableModel model = (DefaultTableModel) tbl_Mng_Requisition.getModel();
        model.setRowCount(0); 

        // Load requisitions from the text file
        Requi requisitionHelper = new Requi();
        ArrayList<Requi> requisitions = requisitionHelper.loadData();

        // Populate table rows
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        for (Requi requisition : requisitions) {
            model.addRow(new Object[] {
                requisition.getRequisitionID(),
                requisition.getSM_ID(),
                requisition.getItemID(),
                requisition.getItemName(),
                requisition.getSupplier(),
                requisition.getReason(),
                formatter.format(requisition.getDateMade()),
                formatter.format(requisition.getDateNeeded()),
                requisition.getStatus()
            });
            
            
            // Add Requisition ID to the combo box
            cboRequiDelete.addItem(requisition.getRequisitionID());
        }
    }//GEN-LAST:event_btnLoadRequiActionPerformed

    private void btnDeleteRequisitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRequisitionActionPerformed
         // Get the selected Requisition ID from the combo box
        String selectedRequisitionID = (String) cboRequiDelete.getSelectedItem();
        if (selectedRequisitionID == null) {
            JOptionPane.showMessageDialog(this, "Please select a Requisition ID to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create a Requi object and call the delete method
        Requi requisitionHelper = new Requi();
        boolean success = requisitionHelper.deleteRequisition(selectedRequisitionID);

        // Show a message based on the result
        if (success) {
            JOptionPane.showMessageDialog(this, "Requisition deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            btnLoadRequiActionPerformed(null); // Refresh the table and combo box
        } else {
            JOptionPane.showMessageDialog(this, "Requisition Status has not been Updated.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteRequisitionActionPerformed

    private void btnFilterRequisitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterRequisitionActionPerformed
        // Get the selected status from the combo box
        String selectedStatus = cboStatus.getSelectedItem().toString();

        // Define the table model for tbl_Mng_Requisition
        DefaultTableModel model = (DefaultTableModel) tbl_Mng_Requisition.getModel();
        model.setRowCount(0); // Clear the table

        // Load requisitions from the text file
        Requi requisitionHelper = new Requi();
        ArrayList<Requi> requisitions = requisitionHelper.loadData();

        // Filter requisitions based on the selected status
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        for (Requi requisition : requisitions) {
            if ("Accepted".equalsIgnoreCase(selectedStatus) && "Accepted".equalsIgnoreCase(requisition.getStatus())) {
                model.addRow(new Object[]{
                    requisition.getRequisitionID(),
                    requisition.getSM_ID(),
                    requisition.getItemID(),
                    requisition.getItemName(),
                    requisition.getSupplier(),
                    requisition.getReason(),
                    formatter.format(requisition.getDateMade()),
                    formatter.format(requisition.getDateNeeded()),
                    requisition.getStatus()
                });
            } else if ("Rejected".equalsIgnoreCase(selectedStatus) && "Rejected".equalsIgnoreCase(requisition.getStatus())) {
                model.addRow(new Object[]{
                    requisition.getRequisitionID(),
                    requisition.getSM_ID(),
                    requisition.getItemID(),
                    requisition.getItemName(),
                    requisition.getSupplier(),
                    requisition.getReason(),
                    formatter.format(requisition.getDateMade()),
                    formatter.format(requisition.getDateNeeded()),
                    requisition.getStatus()
                });
            } else if ("Pending".equalsIgnoreCase(selectedStatus) && "Pending".equalsIgnoreCase(requisition.getStatus())) {
                model.addRow(new Object[]{
                    requisition.getRequisitionID(),
                    requisition.getSM_ID(),
                    requisition.getItemID(),
                    requisition.getItemName(),
                    requisition.getSupplier(),
                    requisition.getReason(),
                    formatter.format(requisition.getDateMade()),
                    formatter.format(requisition.getDateNeeded()),
                    requisition.getStatus()
                });
            }
        }

        // Notify if no requisitions match the filter
        if (model.getRowCount() == 0) {
            System.out.println("No requisitions found for the selected status.");
        }

    }//GEN-LAST:event_btnFilterRequisitionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DashboardSM ds = new DashboardSM();
        ds.setVisible(true);
        this.hide();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_Requisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_Requisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_Requisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_Requisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manage_Requisition().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteRequisition;
    private javax.swing.JButton btnFilterRequisition;
    private javax.swing.JButton btnLoadRequi;
    private javax.swing.JComboBox<String> cboRequiDelete;
    private javax.swing.JComboBox<String> cboStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_Mng_Requisition;
    // End of variables declaration//GEN-END:variables
}
