/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package procurement_order_tracking_system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.PrintWriter;

/**
 *
 * @author Sarvein Rao
 */
public class Sales_Entry extends javax.swing.JFrame {

    /**
     * Creates new form Sales_Entry
     */
    public Sales_Entry() {
        initComponents();
        
        tblSales.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = tblSales.getSelectedRow(); // Get the selected row index

        // Check if a row is selected
        if (selectedRow != -1) {
            // Retrieve data from the selected row
            String salesID = tblSales.getValueAt(selectedRow, 0).toString();
            String date = tblSales.getValueAt(selectedRow, 1).toString();
            String itemID = tblSales.getValueAt(selectedRow, 2).toString();
            String itemName = tblSales.getValueAt(selectedRow, 3).toString();
            int quantity = Integer.parseInt(tblSales.getValueAt(selectedRow, 4).toString());
            double retailPrice = Double.parseDouble(tblSales.getValueAt(selectedRow, 5).toString());
            int salesTax = Integer.parseInt(tblSales.getValueAt(selectedRow, 6).toString().replace("%", "")); // Remove the "%" symbol
            double total = Double.parseDouble(tblSales.getValueAt(selectedRow, 7).toString());

            // Set the retrieved data into the text fields
            txtSID.setText(salesID);                          // Sales ID field
            txtSalesDate.setText(date);                       // Sales Date field
            txtSalesItemID.setText(itemID);                   // Item ID field
            txtSalesItemName.setText(itemName);               // Item Name field
            txtSalesQuantity.setText(String.valueOf(quantity)); // Quantity field
            txtSalesR.setText(String.valueOf(retailPrice));   // Retail Price field
            cboTax.setSelectedItem(String.valueOf(salesTax)); // Sales Tax combo box
            txtSalesTotal.setText(String.valueOf(total));     // Total field
        }
      }
    });
    }

    public static Sales parseSales(String line) {
    try {
        // Split the line into parts based on commas
        String[] parts = line.split(",");

        // Parse each field
        String salesID = parts[0].trim();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        Date saleDate = formatter.parse(parts[1].trim());
        String itemID = parts[2].trim();
        String itemName = parts[3].trim();
        int quantity = Integer.parseInt(parts[4].trim());
        double retailPrice = Double.parseDouble(parts[5].trim());
        int tax = Integer.parseInt(parts[6].trim());
        double total = Double.parseDouble(parts[7].trim());

        // Create and return a new Sales object
        return new Sales(salesID, saleDate, itemID, itemName, quantity, retailPrice, tax, total);
    } catch (ParseException | NumberFormatException | ArrayIndexOutOfBoundsException e) {
        throw new RuntimeException("Error parsing sales data: " + line, e);
    }
}

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnHomeentry = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSales = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSID = new javax.swing.JTextField();
        txtSalesDate = new javax.swing.JTextField();
        txtSalesItemID = new javax.swing.JTextField();
        txtSalesItemName = new javax.swing.JTextField();
        txtSalesQuantity = new javax.swing.JTextField();
        txtSalesR = new javax.swing.JTextField();
        txtSalesTotal = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        cboSalesIID = new javax.swing.JComboBox<>();
        btnSaleTotal = new javax.swing.JButton();
        cboDeleteSales = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cboTax = new javax.swing.JComboBox<>();
        cboSalesID = new javax.swing.JComboBox<>();
        btnSChange = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Sales Entry");

        btnHomeentry.setBackground(new java.awt.Color(102, 102, 255));
        btnHomeentry.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnHomeentry.setForeground(new java.awt.Color(0, 0, 0));
        btnHomeentry.setText("Home");
        btnHomeentry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeentryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHomeentry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(269, 269, 269))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHomeentry)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblSales.setBackground(new java.awt.Color(153, 153, 255));
        tblSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales ID", "Date", "Item ID", "Item Name", "Quantity", "Retail Price", "Sales Tax", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblSales);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setForeground(new java.awt.Color(153, 153, 153));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Sales ID: ");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Date:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Item ID:");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Item Name:");

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Quantity:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Retail Price:");

        txtSalesTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalesTotalActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSaleTotal.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnSaleTotal.setText("Total");
        btnSaleTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleTotalActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Sales Tax (%):");

        cboTax.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "10", "15" }));

        btnSChange.setText("Save Changes");
        btnSChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(cboTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtSalesR, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSalesQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtSalesDate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalesItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalesItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnAdd)
                                            .addComponent(btnView)
                                            .addComponent(btnEdit)
                                            .addComponent(btnDelete))
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSave)
                                            .addComponent(cboDeleteSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboSalesIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboSalesID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                        .addComponent(btnSChange)
                                        .addGap(78, 78, 78))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnSaleTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSalesTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView)
                    .addComponent(btnSave))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSalesDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(cboSalesIID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSalesItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit)
                    .addComponent(cboSalesID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSalesItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete)
                    .addComponent(cboDeleteSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSalesQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSChange))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSalesR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cboTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaleTotal)
                    .addComponent(txtSalesTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeentryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeentryActionPerformed
        DashboardSM smd = new DashboardSM();
        smd.setVisible(true);
        this.hide();
    }//GEN-LAST:event_btnHomeentryActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate = new Date();  // Current date
        String formattedDate = formatter.format(currentDate);

        // Generate Sales ID 
        int randomInt = (int) (Math.random() * 1000); 
        String salesID = String.format("SID%03d", randomInt); 

        // Fill Sales ID and Date in the text fields
        txtSID.setText(salesID);
        txtSalesDate.setText(formattedDate);
        
        DataLoad<Item> itemLoader = new Item();
        ArrayList<Item> itemList = itemLoader.loadData();
        
        String selectedItemID = (String) cboSalesIID.getSelectedItem();
        Item matchedItem = itemList.stream()
        .filter(item -> item.getItem_ID().equals(selectedItemID))
        .findFirst()
        .orElse(null);

        // Auto-fill Item Name and Retail Price if a match is found
        if (matchedItem != null) {
            txtSalesItemID.setText(matchedItem.getItem_ID());
            txtSalesItemName.setText(matchedItem.getItem_Name());
            txtSalesR.setText(String.valueOf(matchedItem.getItem_Retail()));
        } else {         
            JOptionPane.showMessageDialog(this, "Item not found in inventory!", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblSales.getModel();
        model.setRowCount(0);

        // Load sales and item data
        DataLoad<Sales> salesLoader = new Sales();
        DataLoad<Item> itemLoader = new Item();
        ArrayList<Sales> salesList = salesLoader.loadData();
        ArrayList<Item> itemList = itemLoader.loadData();

        //  populate the combo box for Item_IDs
        for (Item item : itemList) {
            cboSalesIID.addItem(item.getItem_ID());
        }

        //  populate the combo box for Sales_IDs
        cboSalesID.removeAllItems();  
        for (Sales sale : salesList) {
            cboSalesID.addItem(sale.getSalesID());
        }
        
        cboDeleteSales.removeAllItems();
        for(Sales saled : salesList) {
            cboDeleteSales.addItem(saled.getSalesID());
        }

        // Add sales data to the table
        for (Sales sale : salesList) {
            // Check if the item exists in the inventory
            Item matchedItem = itemList.stream()
                .filter(item -> item.getItem_ID().equals(sale.getSales_ItemID()))
                .findFirst()
                .orElse(null);

            // Add to table with inventory info if matched
            model.addRow(new Object[]{
            sale.getSalesID(),                                       // Sales ID
            new SimpleDateFormat("dd/MM/yyyy").format(sale.getDate()), // Date
            sale.getSales_ItemID(),                                 // Sales Item ID
            sale.getSales_ItemName(),                               // Sales Item Name
            sale.getSales_Quantity(),                               // Quantity
            String.format("%.2f", sale.getRetail_price()),          // Retail Price
            sale.getSales_Tax() + "%",                              // Sales Tax (with % symbol)
            String.format("%.2f", sale.getSales_Total()),           // Total
            matchedItem != null ? matchedItem.getItem_Stock() : "Not Found" // Inventory Stock
        });
        }

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
         try {
            String salesID = txtSID.getText().trim();
            String itemID = txtSalesItemID.getText().trim();
            String itemName = txtSalesItemName.getText().trim();
            int quantity = Integer.parseInt(txtSalesQuantity.getText().trim());
            double retailPrice = Double.parseDouble(txtSalesR.getText().trim());
            int tax = Integer.parseInt(cboTax.getSelectedItem().toString().replace("%", "").trim());

            // Retrieve the total from the Total text field
            if (txtSalesTotal.getText().isEmpty()) {
                throw new IllegalArgumentException("Please calculate the total before saving.");
            }
            double total = Double.parseDouble(txtSalesTotal.getText().trim());

            // Parse the date from the Sales Date text field
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            String dateText = txtSalesDate.getText().trim();
            Date saleDate = formatter.parse(dateText);

            // Ensure all required fields are filled
            if (salesID.isEmpty() || itemID.isEmpty() || itemName.isEmpty() || dateText.isEmpty()) {
                throw new IllegalArgumentException("Please fill in all fields.");
        }

        // Create a new Sales object and save the details
        Sales sale = new Sales(salesID, saleDate, itemID, itemName, quantity, retailPrice, tax, total);
        sale.writeSales(sale);

        // Show success message
        JOptionPane.showMessageDialog(null, "Sales details saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear input fields
        txtSID.setText("");
        txtSalesItemID.setText("");
        txtSalesItemName.setText("");
        txtSalesQuantity.setText("");
        txtSalesR.setText("");
        txtSalesDate.setText("");
        txtSalesTotal.setText("");

    } catch (ParseException ex) {
        JOptionPane.showMessageDialog(this, "Invalid date format. Please use dd/MM/yyyy.", "Date Format Error", JOptionPane.ERROR_MESSAGE);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Please enter valid numeric values for Quantity, Retail Price, and Total.", "Input Error", JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage(), "Input Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // Load the existing sales data
        Sales salesLoader = new Sales();
        ArrayList<Sales> salesList = salesLoader.loadData();
        
        String selectedSID = (String) cboSalesID.getSelectedItem();

        
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        // Iterate over the sales list and write each record to the file
        for (Sales sale : salesList) {
            if (sale.getSalesID().equals(selectedSID)) {
                // Populate the text fields with the selected Sales data for editing
                txtSID.setText(selectedSID);
                txtSalesDate.setText(formatter.format(sale.getDate()));
                txtSalesItemID.setText(sale.getSales_ItemID());
                txtSalesItemName.setText(sale.getSales_ItemName());
                txtSalesQuantity.setText(String.valueOf(sale.getSales_Quantity()));
                txtSalesR.setText(String.valueOf(sale.getRetail_price()));
                txtSalesTotal.setText(String.valueOf((int) sale.getSales_Total()));
                
                // Exit after populating the fields to allow the user to edit
                return;
            }
        }
        System.out.println("All sales records updated successfully.");
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtSalesTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalesTotalActionPerformed
       
    }//GEN-LAST:event_txtSalesTotalActionPerformed

    private void btnSaleTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleTotalActionPerformed
        try {
        // Get the quantity from the Quantity text field
        int quantity = Integer.parseInt(txtSalesQuantity.getText().trim());

        // Get the retail price from the Retail Price text field
        double retailPrice = Double.parseDouble(txtSalesR.getText().trim());

        // Get the tax percentage from the Combo Box
        int tax = Integer.parseInt(cboTax.getSelectedItem().toString().replace("%", "").trim());

        // Calculate the total with tax
        double taxMultiplier = 1 + (tax / 100.0); // Convert tax percentage to decimal
        double total = quantity * retailPrice * taxMultiplier;

        // Set the total in the Total text field
        txtSalesTotal.setText(String.format("%.2f", total));
    } catch (NumberFormatException e) {
        // Handle invalid input 
        JOptionPane.showMessageDialog(null, "Please enter valid numeric values for Quantity, Retail Price, and ensure Tax is selected.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSaleTotalActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Get the selected Sales ID from the combo box
        String selectedSalesID = (String) cboDeleteSales.getSelectedItem();

        // Ensure a valid Sales ID is selected
        if (selectedSalesID == null || selectedSalesID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a Sales ID to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // File to read/write sales entries
        File file = new File("Sales_Details.txt");

        // List to store updated entries
        ArrayList<String> updatedEntries = new ArrayList<>();
        boolean entryFound = false;

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;

            // Read file line by line
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",", 2); // Split into 2 parts: Sales ID and the rest
                String salesID = data[0].trim(); // Trim to remove any extra spaces

                if (!salesID.equals(selectedSalesID)) {
                    // Keep the entries that do not match the selected Sales ID
                    updatedEntries.add(line);
                } else {
                    // Mark the entry as found
                    entryFound = true;
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading the sales file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!entryFound) {
            JOptionPane.showMessageDialog(this, "No sales entry found with the selected Sales ID.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Write updated entries back to the file
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
            for (String entry : updatedEntries) {
                writer.write(entry);
                writer.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error writing to the sales file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Notify user of successful deletion
        JOptionPane.showMessageDialog(this, "Sales entry deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Refresh the combo box or any other UI elements as needed
        cboDeleteSales.removeItem(selectedSalesID); // Remove the deleted Sales ID from the combo box
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSChangeActionPerformed
        try {
            // Load the existing sales data
            Sales salesLoader = new Sales();
            ArrayList<Sales> salesList = salesLoader.loadData();

            String editedSalesID = txtSID.getText().trim(); // Get the edited SalesID
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

            // Iterate through the sales list to find and update the record
            boolean isUpdated = false;
            for (int i = 0; i < salesList.size(); i++) {
                Sales sale = salesList.get(i);
                if (sale.getSalesID().equals(editedSalesID)) {
                    // Update the sale record with new values from text fields
                    sale.setDate(formatter.parse(txtSalesDate.getText().trim()));
                    sale.setSales_ItemID(txtSalesItemID.getText().trim());
                    sale.setSales_ItemName(txtSalesItemName.getText().trim());
                    sale.setSales_Quantity(Integer.parseInt(txtSalesQuantity.getText().trim()));
                    sale.setRetail_price(Double.parseDouble(txtSalesR.getText().trim()));
                    sale.setSales_Tax(Integer.parseInt(cboTax.getSelectedItem().toString().replace("%", "").trim()));
                    sale.setSales_Total(Double.parseDouble(txtSalesTotal.getText().trim()));

                    isUpdated = true; // Mark as updated
                    break; // Exit the loop after updating
                }
        }

        // If no matching record was found, show an error message
        if (!isUpdated) {
            JOptionPane.showMessageDialog(this, "No matching Sales ID found to update.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Write the updated sales list back to the file
        File file = new File("Sales_Details.txt");
        try (PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter(file)))) {
            for (Sales sale : salesList) {
                writer.println(sale.toFileFormat()); // Write each sale back to the file
            }
        }

        // Show a success message
        JOptionPane.showMessageDialog(this, "Sales details updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear input fields
        txtSID.setText("");
        txtSalesDate.setText("");
        txtSalesItemID.setText("");
        txtSalesItemName.setText("");
        txtSalesQuantity.setText("");
        txtSalesR.setText("");
        txtSalesTotal.setText("");
    } catch (ParseException ex) {
        JOptionPane.showMessageDialog(this, "Invalid date format. Please use dd/MM/yyyy.", "Date Format Error", JOptionPane.ERROR_MESSAGE);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Please enter valid numeric values for Quantity, Retail Price, and Total.", "Input Error", JOptionPane.ERROR_MESSAGE);
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Error accessing sales file: " + ex.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales_Entry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHomeentry;
    private javax.swing.JButton btnSChange;
    private javax.swing.JButton btnSaleTotal;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cboDeleteSales;
    private javax.swing.JComboBox<String> cboSalesID;
    private javax.swing.JComboBox<String> cboSalesIID;
    private javax.swing.JComboBox<String> cboTax;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSales;
    private javax.swing.JTextField txtSID;
    private javax.swing.JTextField txtSalesDate;
    private javax.swing.JTextField txtSalesItemID;
    private javax.swing.JTextField txtSalesItemName;
    private javax.swing.JTextField txtSalesQuantity;
    private javax.swing.JTextField txtSalesR;
    private javax.swing.JTextField txtSalesTotal;
    // End of variables declaration//GEN-END:variables
}
